@model CRUD_Using_DataBaseFirst_MVC.Models.User

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.First_Name, "Please Enter First Name", new { @class = "text-danger hide", id = "firstName" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Last_Name, "Please Enter Last Name", new { @class = "text-danger hide", id = "lastName" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone_Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_Number, "Please Enter Phone Number", new { @class = "text-danger hide", id = "phoneNumber" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "Please Enter Email", new { @class = "text-danger hide", id = "email" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.ID == null)
                {
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "Gender" })
                    @Html.Label("Male")
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "Gender" })
                    @Html.Label("Female")
                }
                else
                {
                    if (Model.Gender.Trim() == "Male")
                    {
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @checked = true, @class = "Gender" })
                        @Html.Label("Male")
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "Gender" })
                        @Html.Label("Female")
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "Gender" })
                        @Html.Label("Male")
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @checked = true, @class = "Gender" })
                        @Html.Label("Female")
                    }
                }
                @Html.ValidationMessageFor(model => model.Gender, "Please Select Gender", new { @class = "text-danger hide", id = "gender" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryID", null, "Select Country", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryID, "Please Select Country", new { @class = "text-danger hide", id = "ddlCountry" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateID, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StateID", null, "Select State", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StateID, "Please Select State", new { @class = "text-danger hide", id = "ddlState" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityID, "City", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityID", null, "Select City", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CityID, "Please Select City", new { @class = "text-danger hide", id = "ddlCity" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (ViewBag.ID == null)
                {
                    <input type="submit" id="create" value="Create" class="btn btn-primary" />
                }
                else
                {
                    <input type="submit" id="create" value="Update" class="btn btn-warning" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "UserData")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Scripts/user/create.js"></script>
    @*@if (ViewBag.ID == null)
    {
        <script src="~/Scripts/user/create.js"></script>
    }
    else
    {
        <script src="~/Scripts/user/edit.js"></script>
    }*@
}
